{"ast":null,"code":"import _defineProperty from \"/Users/mina/Code/stock-frontend-v2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/mina/Code/stock-frontend-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mina/Code/stock-frontend-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/mina/Code/stock-frontend-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mina/Code/stock-frontend-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/mina/Code/stock-frontend-v2/src/pages/Stocks/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { search, categorize, filterRating } from \"../../utils\";\nimport { MoviesTable, Pagination } from \"../../components\";\nimport { Input, Loading, ListGroup } from \"../../components/common\";\nimport { getMovies as _getMovies } from \"../../actions/moviesAction\";\nimport { getGenres as _getGenres } from \"../../actions/genreAction\";\nimport { Chart } from \"react-google-charts\";\nimport { GET_ALL_COUNTRIES_DATA } from \"../../actions/stocksAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var data = [[\"Country\", \"Popularity\"], [\"Germany\", 200], [\"United States\", 300], [\"Brazil\", 400], [\"Canada\", 500], [\"France\", 600], [\"RU\", 700]];\nvar Stocks = /*#__PURE__*/function (_Component) {\n  _inherits(Stocks, _Component);\n  var _super = _createSuper(Stocks);\n  function Stocks() {\n    var _this;\n    _classCallCheck(this, Stocks);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      genres: [],\n      pageSize: 12,\n      currentPage: 1,\n      currentGenre: \"All\",\n      searchFilter: \"\",\n      rating: 0\n    };\n    _this.handleChange = function (name, value) {\n      var _this$setState;\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"currentPage\", 1), _this$setState));\n    };\n    _this.onPageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n    return _this;\n  }\n  _createClass(Stocks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getMovies();\n      this.props.getGenres();\n      this.props.GET_ALL_COUNTRIES_DATA();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        currentGenre = _this$state.currentGenre,\n        currentPage = _this$state.currentPage,\n        searchFilter = _this$state.searchFilter,\n        pageSize = _this$state.pageSize,\n        rating = _this$state.rating;\n      var _this$props = this.props,\n        movies = _this$props.movies,\n        genres = _this$props.genres,\n        loggedIn = _this$props.loggedIn;\n      if (_.isEmpty(movies)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"background-container pt-5\",\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this);\n      }\n      var filteredMovies = [];\n\n      /* Checking for searched item if nothing searched it will just set it to allMovies*/\n      filteredMovies = search(movies, searchFilter, \"title\");\n      filteredMovies = categorize(filteredMovies, currentGenre);\n      filteredMovies = filterRating(filteredMovies, rating);\n      return /*#__PURE__*/_jsxDEV(Chart, {\n        chartEvents: [{\n          eventName: \"select\",\n          callback: function callback(_ref) {\n            var chartWrapper = _ref.chartWrapper;\n            var chart = chartWrapper.getChart();\n            var selection = chart.getSelection();\n            if (selection.length === 0) return;\n            var region = data[selection[0].row + 1];\n            console.log(\"Selected : \" + region);\n          }\n        }],\n        chartType: \"GeoChart\",\n        width: \"100%\",\n        height: \"400px\",\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return Stocks;\n}(Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movies: state.movie.movies,\n    genres: state.genre.genres,\n    loggedIn: state.auth.loggedIn\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getMovies: function getMovies() {\n      return dispatch(_getMovies());\n    },\n    getGenres: function getGenres() {\n      return dispatch(_getGenres());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","map":{"version":3,"names":["React","Component","connect","_","search","categorize","filterRating","MoviesTable","Pagination","Input","Loading","ListGroup","getMovies","getGenres","Chart","GET_ALL_COUNTRIES_DATA","jsxDEV","_jsxDEV","data","Stocks","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","genres","pageSize","currentPage","currentGenre","searchFilter","rating","handleChange","name","value","_this$setState","setState","_defineProperty","onPageChange","page","_createClass","key","componentDidMount","props","render","_this$state","_this$props","movies","loggedIn","isEmpty","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredMovies","chartEvents","eventName","callback","_ref","chartWrapper","chart","getChart","selection","getSelection","region","row","console","log","chartType","width","height","mapStateToProps","movie","genre","auth","mapDispatchToProps","dispatch","Movies"],"sources":["/Users/mina/Code/stock-frontend-v2/src/pages/Stocks/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport { search, categorize, filterRating } from \"../../utils\";\nimport { MoviesTable, Pagination } from \"../../components\";\nimport { Input, Loading, ListGroup } from \"../../components/common\";\n\nimport { getMovies } from \"../../actions/moviesAction\";\nimport { getGenres } from \"../../actions/genreAction\";\n\nimport { Chart } from \"react-google-charts\";\n\nimport { GET_ALL_COUNTRIES_DATA } from \"../../actions/stocksAction\";\n\nexport const data = [\n  [\"Country\", \"Popularity\"],\n  [\"Germany\", 200],\n  [\"United States\", 300],\n  [\"Brazil\", 400],\n  [\"Canada\", 500],\n  [\"France\", 600],\n  [\"RU\", 700],\n];\n\nclass Stocks extends Component {\n  state = {\n    genres: [],\n    pageSize: 12,\n    currentPage: 1,\n    currentGenre: \"All\",\n    searchFilter: \"\",\n    rating: 0,\n  };\n\n  componentDidMount() {\n    this.props.getMovies();\n    this.props.getGenres();\n    this.props.GET_ALL_COUNTRIES_DATA();\n  }\n\n  handleChange = (name, value) => {\n    this.setState({ [name]: value, currentPage: 1 });\n  };\n\n  onPageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  render() {\n    const { currentGenre, currentPage, searchFilter, pageSize, rating } =\n      this.state;\n\n    const { movies, genres, loggedIn } = this.props;\n\n    if (_.isEmpty(movies)) {\n      return (\n        <div className=\"background-container pt-5\">\n          <Loading />\n        </div>\n      );\n    }\n\n    let filteredMovies = [];\n\n    /* Checking for searched item if nothing searched it will just set it to allMovies*/\n    filteredMovies = search(movies, searchFilter, \"title\");\n    filteredMovies = categorize(filteredMovies, currentGenre);\n    filteredMovies = filterRating(filteredMovies, rating);\n\n    return (\n      <Chart\n        chartEvents={[\n          {\n            eventName: \"select\",\n            callback: ({ chartWrapper }) => {\n              const chart = chartWrapper.getChart();\n              const selection = chart.getSelection();\n              if (selection.length === 0) return;\n              const region = data[selection[0].row + 1];\n              console.log(\"Selected : \" + region);\n            },\n          },\n        ]}\n        chartType=\"GeoChart\"\n        width=\"100%\"\n        height=\"400px\"\n        data={data}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.movie.movies,\n    genres: state.genre.genres,\n    loggedIn: state.auth.loggedIn,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getMovies: () => dispatch(getMovies()),\n    getGenres: () => dispatch(getGenres()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}